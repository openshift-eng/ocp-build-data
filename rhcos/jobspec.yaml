# Publish

job:
  strict: true
  miniocfgfile: ""
minio:
  bucket: build
recipe:
  git_ref: release-4.9
  git_url: https://github.com/openshift/os
  repos:
  - name: firewall
    inline: |
      # These repositories are generated by the OpenShift Automated Release Team
      # https://issues.redhat.com/browse/GRPA-2238
      # http://post-office.corp.redhat.com/archives/aos-devel/2020-June/msg00106.html

      # See https://github.com/openshift/os/blob/master/README.md#building
      [rhel-8-server-ose]
      enabled=1
      gpgcheck=0
      baseurl=http://download.eng.bos.redhat.com/rcm-guest/puddles/RHAOS/plashets/4.9-el8/building/$basearch/os
      # Exclude protobuf until:
      # https://issues.redhat.com/browse/ART-2355
      exclude=nss-altfiles kernel protobuf
      # This repo provides 'qemu-kiwi' for the `sandboxed-containers` extension
      # https://github.com/openshift/enhancements/blob/master/enhancements/sandboxed-containers/sandboxed-containers-tech-preview.md

      [rhel-8-advanced-virt]
      baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/layered/rhel8/$basearch/advanced-virt/os/
      enabled=1
      gpgcheck=0
      [rhel-8-fast-datapath]
      baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/layered/rhel8/$basearch/fast-datapath/os/
      enabled=1
      gpgcheck=0

      # Fast Datapath has yet to ship for ARM, so the above repo is empty on aarch64.
      # Once it starts shipping, the following repo should be removed.
      [rhel-8-fast-datapath-aarch64]
      baseurl=http://download-node-02.eng.bos.redhat.com/rcm-guest/puddles/Multi-Arch/Fast-DataPath/EL8-Production/latest/aarch64/os/
      enabled=1
      gpgcheck=0
      # The baseurls below are tracking the latest version of RHEL that has been released.
      # In the case of any of these locations being unavailable, it should be possible
      # to switch out the `/8/` to the latest RHEL version (i.e. `/8.1/` or `/8.2/`).
      #
      # RHCOS 4.9 will track RHEL 8.4, but we can use `8` until 8.4 reaches EUS
      [rhel-8-baseos]
      baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/rhel8/8/$basearch/baseos/os/
      enabled=1
      gpgcheck=0

      [rhel-8-appstream]
      baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/rhel8/8/$basearch/appstream/os/
      enabled=1
      gpgcheck=0
      # Exclude toolbox to make sure we use coreos/toolbox from rhaos repo
      # kata-containers wants non-modular libpmem
      exclude=toolbox libpmem*module*

      [rhel-8-nfv]
      baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/rhel8/8/x86_64/nfv/os/
      enabled=1

publish_oscontainer:
  buildstrategy_tls_verify: null
  registries:
  - url: quay.io/openshift-release-dev/ocp-v4.0-art-dev
    secret_type: cluster
    secret: upload-registry.ci.openshift.org.dockercfg
  - url: registry.ci.openshift.org/rhcos/machine-os-content:test
    # should be :4.y when this is working
    secret_type: cluster
    secret: upload-registry.ci.openshift.org.dockercfg

stages:
- id: Build and test QEMU
  execution_order: 1
  description: Create the base build and test it
  build_artifacts: [base]
  post_commands:
    - cosa kola run --basic-qemu-scenarios

- id: Upload to brew
  execution_order: 2
  description: Create brew build record and upload artifacts
  require_artifacts: [qemu]
  commands:
    - coreos-assembler koji-upload upload --reserve-id --keytab /srv/.keytab/keytab --buildroot builds --owner rhcos-build/jenkins-redhat-coreos.cloud.paas.upshift.redhat.com@REDHAT.COM --profile brew --tag rhaos-4.9-rhel-8-build
      # secret is rhcos-keytab
      # can this retry on failure?

- id: Build Prep
  execution_order: 3
  description: ' Check previous build'
  require_artifacts: [qemu]
  post_commands:
    #- coreos-assembler buildprep s3://art-rhcos-ci/releases/rhcos-4.9
    - coreos-assembler buildprep s3://art-rhcos-ci/testing/gangplank

- id: Upload to S3
  execution_order: 4
  description: Insert into S3 (but not in standard stream location)
  require_artifacts: [qemu]
  commands:
    - cosa buildupload s3 --acl=private art-rhcos-ci/testing/gangplank
      # secret is coreos-assembler-aws-secret

delay_meta_merge: false

