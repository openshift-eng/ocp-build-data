cachito:
  packages:
    gomod:
    - path: go-controller
content:
  source:
    dockerfile: Dockerfile.microshift
    git:
      branch:
        target: release-{MAJOR}.{MINOR}
      url: git@github.com:openshift-priv/ovn-kubernetes.git
      web: https://github.com/openshift/ovn-kubernetes
    ci_alignment:
      streams_prs:
        ci_build_root:
          stream: rhel-9-golang-ci-build-root
    pkg_managers:
    - gomod
distgit:
  component: ovn-kubernetes-microshift-container
  branch: rhaos-{MAJOR}.{MINOR}-rhel-9
delivery:
  # Maps to honeybadger repo_name
  repo_name: ose-ovn-kubernetes-microshift
  delivery_repo_names:
  - openshift4/ose-ovn-kubernetes-microshift-rhel9
enabled_repos:
- rhel-9-appstream-rpms
- rhel-9-baseos-rpms
- rhel-9-fast-datapath-rpms
- rhel-9-server-ose-rpms-embargoed
# Generally doozer scan-sources will detect all possible change factors automatically and trigger rebuilds.
# However, certain images may consume RPMs in unexpected way that make it programmatically impossible to
# detect they were used.
scan_sources:
  # ovn-kubernetes uses pins in the Dockerfile.
  # We should configure exemptions for those known pins to avoid meaningless rebuild.
  # https://github.com/openshift/ovn-kubernetes/blob/e236fea83d62de8b60b9456770a3e0b525830051/Dockerfile.base#L22
  exempt_rpms:
  - libreswan
  - openvswitch*
  - ovn*
  - python3-openvswitch*
for_payload: true
from:
  builder:
  - stream: rhel-9-golang-1.23
  member: ovn-kubernetes-base
labels:
  License: GPLv2+
  io.k8s.description: This is a component of MicroShift that provides an overlay network using ovn.
  io.k8s.display-name: ovn kubernetes microshift
  io.openshift.tags: openshift
name: openshift/ose-ovn-kubernetes-microshift-rhel9
payload_name: ovn-kubernetes-microshift
owners:
- aos-networking-staff@redhat.com
konflux:
  cachi2:
    # Until https://redhat-internal.slack.com/archives/GDBRP5YJH/p1745000508652589 is merged
    enabled: false
  network_mode: open
canonical_builders_from_upstream: true
